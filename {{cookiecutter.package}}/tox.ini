[tox]
envlist =
    {py35,py36,py37}-test
    lint
    sort
    format
    type
    docs
    changelog
    metadata-release
skip_missing_interpreters = True
isolated_build = True

[testenv]
description = run the unit tests
deps = 
  pytest
  pytest-cov
  pytest-mock
commands = 
  pytest test/ --cov={toxinidir}/{{cookiecutter.package}}/ --no-cov-on-fail {posargs}

[testenv:lint]
description = lint the source
skipdist = True
deps = 
  flake8
commands = 
  flake8 {posargs} {{cookiecutter.package}}/ test/

[testenv:sort]
description = sort the source
skipdist = True
deps = 
  isort
commands = 
  isort {posargs:-rc -c} -sp setup.cfg {{cookiecutter.package}}/ test/

[testenv:format]
description = format the source
skipdist = True
basepython = python3.6
deps = 
  black
commands = 
  black {posargs:--check} {{cookiecutter.package}}/ test/

[testenv:type]
description = type check the source
basepython = python3.7
skipdist = True
deps = 
  mypy
commands = 
  mypy {{cookiecutter.package}}/ test/

[testenv:docs]
description = build the documentation
skipdist = True
deps = 
  sphinx
commands = 
  python -m setup build_sphinx

[testenv:changelog]
description = draft the changelog
skipdist = True
deps = 
  towncrier
commands = 
  towncrier --draft

[testenv:metadata-release]
description = validate the package metadata
deps =
  twine
commands =
  twine check .tox/dist/*

[testenv:test-release]
description = make a test release
deps =
  {[testenv:metadata-release]deps}
commands =
    python -m setup sdist bdist_wheel
    twine upload --repository-url https://test.pypi.org/legacy/ dist/*

[testenv:prod-release]
description = make a production release
deps =
  {[testenv:metadata-release]deps}
commands =
    python -m setup sdist bdist_wheel
    twine upload dist/*
